syntax = "proto3";

package tdoo;

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

import "global/common/order.proto";
import "global/common/time_range.proto";
import "global/orm/orm.proto";
import "tdoo/user_ent.proto";

option go_package = "frec.kr/tdoo/pkg/v1/gen/tdoo";


service UserService {
	rpc Get     (UserGetRequest)    returns (User);
	rpc List    (UserListRequest)   returns (UserListResponse);
	rpc Create  (UserCreateRequest) returns (User);
	rpc Update  (UserUpdateRequest) returns (User);
	rpc Delete  (UserDeleteRequest) returns (google.protobuf.Empty);
}

message UserRequestOptions {
	optional google.protobuf.FieldMask read_mask = 1;
}

message UserGetRequest {
	oneof by {
		bytes id = 1;
		string nickname = 3;
		string email = 4;
	}
	optional UserRequestOptions params = 15;
}

message UserListRequest {
	repeated UserFilter filters = 1;
	repeated UserOrder orders = 2;
	optional UserRequestOptions params = 3;

	optional string page_token = 15;
}

message UserOrder {
	oneof by {
		common.OrderOption date_created = 14;
		common.OrderOption date_updated = 15;
	}
	reserved 1 to 13;
}

message UserFilter {
	oneof by {
		google.protobuf.Timestamp date_created = 14;
		google.protobuf.Timestamp date_updated = 15;
	}
}

message UserListResponse {
	repeated User users = 1;

	string next_page_token = 15;
}

message UserCreateRequest {
	string name = 2;
	string nickname = 3;
	string email = 4;
}

message UserUpdateRequest {
	User user = 1;
	google.protobuf.FieldMask update_mask = 2;
}

message UserDeleteRequest {
	bytes id = 1;
}